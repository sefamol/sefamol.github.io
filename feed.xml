<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://sefamol.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://sefamol.github.io/" rel="alternate" type="text/html" hreflang="es"/><updated>2024-10-28T23:07:09+00:00</updated><id>https://sefamol.github.io/feed.xml</id><title type="html">Mis apuntes de Ethical Hacking</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Wikimedia - Eliminación de ruido en imagenes</title><link href="https://sefamol.github.io/blog/2024/wikimedia-ruido/" rel="alternate" type="text/html" title="Wikimedia - Eliminación de ruido en imagenes"/><published>2024-10-27T22:26:00+00:00</published><updated>2024-10-27T22:26:00+00:00</updated><id>https://sefamol.github.io/blog/2024/wikimedia-ruido</id><content type="html" xml:base="https://sefamol.github.io/blog/2024/wikimedia-ruido/"><![CDATA[<p>Existen procesos necesarios para que las imágenes añadidas a Wikimedia sean consideradas en el concurso Wikimedia Commons a nivel mundial. Uno de ellos es la eliminación de ruido, que reduce la granulación de la imagen en su máxima resolución, mejorando su calidad.</p> <p>El proceso propuesto consiste en separar el ruido y la textura en diferentes capas, logrando una imagen con menos ruido y granulado. Este tutorial se divide en tres etapas:</p> <ul> <li>Duplicar la capa original y obtener los bordes.</li> <li>Extraer el ruido.</li> <li>Ajustar y tratar la textura.</li> </ul> <h3 id="primera-etapa-duplicado-de-la-capa-original-y-obtención-de-los-bordes">Primera etapa, duplicado de la capa original y obtención de los bordes</h3> <ul> <li>Duplicamos el proyecto en el menu <strong>Imagen -&gt; Duplicar</strong> y lo nombramos como (nombre_origina)_copia. Posteriormente en el <strong>nuevo proyecto</strong> utilizamos el modo Color Lab ubicado en el menu <strong>Imagen -&gt; Modo -&gt; Color Lab</strong></li> </ul> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido2-480.webp 480w,/assets/img/reduccion-ruido2-800.webp 800w,/assets/img/reduccion-ruido2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido3-480.webp 480w,/assets/img/reduccion-ruido3-800.webp 800w,/assets/img/reduccion-ruido3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido3.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Creación de un nuevo proyecto y acceso al Modo Lab de edición. </div> <p>En el panel de capas seleccionamos canal y activamos solo el canal de <strong>luminosidad</strong>. Posteriormente seleccionamos <strong>Filtro -&gt; Galeria de filtros</strong></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido23-480.webp 480w,/assets/img/reduccion-ruido23-800.webp 800w,/assets/img/reduccion-ruido23-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido23.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido4-480.webp 480w,/assets/img/reduccion-ruido4-800.webp 800w,/assets/img/reduccion-ruido4-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido4.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Selección del canal luminosidad e ingreso a galeria de filtros. </div> <p>Una vez dentro de <strong>galeria de filtros</strong> elegimos <strong>estilizar -&gt; bordes resplandecientes</strong> y adecuamos los valores para que los bordes tengan la mayor cantidad posible de contraste con el color negro de fondo.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido1-480.webp 480w,/assets/img/reduccion-ruido1-800.webp 800w,/assets/img/reduccion-ruido1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Obtención de los bordes con el filtro bordes resplandecientes. </div> <p>Si es necesario realizamos un mayor contraste utilizando el filtro <strong>brillo / contraste</strong> para luego <strong>seleccionar</strong> nuestra imagen utilizando las teclas <strong>ctrl + click izquierdo</strong>. Notaremos que dentro de los bordes se rellenara con lineas como se ve en la tercera imagen.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido5-480.webp 480w,/assets/img/reduccion-ruido5-800.webp 800w,/assets/img/reduccion-ruido5-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido5.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido6-480.webp 480w,/assets/img/reduccion-ruido6-800.webp 800w,/assets/img/reduccion-ruido6-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido6.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido7-480.webp 480w,/assets/img/reduccion-ruido7-800.webp 800w,/assets/img/reduccion-ruido7-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido7.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Obtención de los bordes de la imagen utilizando el filtro brillo y contraste y selección de la imágen. </div> <p>Posteriormente guardamos la <strong>selección</strong> que obtuvimos en el paso anterior utilizando el menu <strong>Selección -&gt; Guardar Selección</strong>. Le damos un nombre, en este caso le di el nombre de <strong>definición</strong>. Con ello finalizamos la primera etapa del tutorial.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido8-480.webp 480w,/assets/img/reduccion-ruido8-800.webp 800w,/assets/img/reduccion-ruido8-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido8.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido12-480.webp 480w,/assets/img/reduccion-ruido12-800.webp 800w,/assets/img/reduccion-ruido12-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido12.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Guardado de la selección de bordes. </div> <h3 id="segunda-etapa-extracción-del-ruido">Segunda etapa, Extracción del ruido.</h3> <p>En el <strong>proyecto original</strong> duplicamos la capa principal y la renombramos como ruido utilizando las teclas <strong>ctrl+j</strong>, esta nueva capa la convertimos en objeto inteligente utilizando el <strong>boton derecho sobre el texto ruido</strong> para desplegar el <strong>menu de opciones</strong>. Finalmente Seleccionamos convertir en <strong>objeto inteligente</strong>.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido9-480.webp 480w,/assets/img/reduccion-ruido9-800.webp 800w,/assets/img/reduccion-ruido9-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido9.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido10-480.webp 480w,/assets/img/reduccion-ruido10-800.webp 800w,/assets/img/reduccion-ruido10-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido10.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Creando la capa ruido y convirtiendola en objeto inteligente. </div> <p>Una vez, convertida la capa en objeto inteligente, <strong>cargamos</strong> la selección realizada en la primera etapa, para ello vamos al menu <strong>Selección -&gt; Cargar Selección</strong> y <strong>seleccionamos el proyecto de la copia de la etapa 1</strong>.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido11-480.webp 480w,/assets/img/reduccion-ruido11-800.webp 800w,/assets/img/reduccion-ruido11-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido11.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido12-480.webp 480w,/assets/img/reduccion-ruido12-800.webp 800w,/assets/img/reduccion-ruido12-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido12.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Carga de la selección del ruido del proyecto duplicado. </div> <p>Añadimos una <strong>mascara de capa</strong> a la <strong>capa ruido</strong></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido14-480.webp 480w,/assets/img/reduccion-ruido14-800.webp 800w,/assets/img/reduccion-ruido14-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido14.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido15-480.webp 480w,/assets/img/reduccion-ruido15-800.webp 800w,/assets/img/reduccion-ruido15-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido15.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Añadido de mascara de capa. </div> <p>Tras esta acción se puede observar que la imagen muestra los bordes del detalle de la imagen</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido16-480.webp 480w,/assets/img/reduccion-ruido16-800.webp 800w,/assets/img/reduccion-ruido16-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido16.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Máscara de capa. </div> <h3 id="tercera-etapa-ajuste-y-tratado-de-la-textura">Tercera etapa, Ajuste y tratado de la textura.</h3> <p>Para iniciar el tratamiento de la imagen es necesario invertir la capa, utilizando las teclas <strong>ctrl+i</strong></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido17-480.webp 480w,/assets/img/reduccion-ruido17-800.webp 800w,/assets/img/reduccion-ruido17-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido17.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Inversión de la selección del ruido. </div> <p><strong>renombramos la capa original</strong> con un nombre diferente a fondo, en este caso lo renombre a detalles, posdteriormente con la capa ruido seleccionada, y utilizamos el menu <strong>filtro -&gt; Filtro de camera raw</strong></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido19-480.webp 480w,/assets/img/reduccion-ruido19-800.webp 800w,/assets/img/reduccion-ruido19-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido19.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido20-480.webp 480w,/assets/img/reduccion-ruido20-800.webp 800w,/assets/img/reduccion-ruido20-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido20.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Añadido de mascara de capa. </div> <p>Finalmente ajustamos la reducción de ruido en el menu <strong>Detalle -&gt; Reduccion de ruido</strong></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido20-480.webp 480w,/assets/img/reduccion-ruido20-800.webp 800w,/assets/img/reduccion-ruido20-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido20.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Reducción de ruido. </div> <p>Si es necesario ajustamos la textura para mejorar la calidad de la imagen en el menu <strong>basico -&gt; textura</strong></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/reduccion-ruido21-480.webp 480w,/assets/img/reduccion-ruido21-800.webp 800w,/assets/img/reduccion-ruido21-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/reduccion-ruido21.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Ajuste de la textura. </div> <p><strong>Nota:</strong></p> <ul> <li>Los valores en cada paso se asignan según la necesidad de cada imagen</li> <li>Dependiendo el caso se verifica la funcionalidad del proceso.</li> </ul>]]></content><author><name></name></author><category term="wikimedia"/><category term="wikimedia,"/><category term="photoshop,"/><category term="edicion,"/><category term="imagenes"/><summary type="html"><![CDATA[Tutorial para la eliminación de ruido en las imagenes de Wikimedia Commons]]></summary></entry><entry><title type="html">Mi experiencia con la CEH v12</title><link href="https://sefamol.github.io/blog/2024/CEH/" rel="alternate" type="text/html" title="Mi experiencia con la CEH v12"/><published>2024-09-25T21:01:00+00:00</published><updated>2024-09-25T21:01:00+00:00</updated><id>https://sefamol.github.io/blog/2024/CEH</id><content type="html" xml:base="https://sefamol.github.io/blog/2024/CEH/"><![CDATA[<h1 id="datos-generales"><strong>Datos Generales</strong></h1> <ul> <li><strong>Preguntas</strong>: 20</li> <li><strong>Duracion</strong>: 6 Horas</li> <li><strong>Aprobación</strong>: 70% (14 preguntas)</li> <li><strong>Restricciones</strong>: Se puede usar navegador, youtube, foros, etc. No esta permitido aplicaciones de inteligencia artificial.</li> </ul> <h1 id="sobre-ec-council-y-el-proctor"><strong>Sobre ec-council y el proctor</strong></h1> <h3 id="pros">Pros</h3> <ul> <li>El soporte de ec-council es rápido y proactivo en las soluciones con su sistema.</li> <li>Los proctors son amables y te brindan soporte en la medida de sus posibilidades.</li> </ul> <h3 id="contras">Contras</h3> <ul> <li>Su sistema es lento.</li> <li>Al ser máquinas virtuales no es posible realizar muchas operaciones de manera sencilla.</li> <li>Algunas prenguntas no son posibles de resolver debido a que el sistema se congela.</li> </ul> <h3 id="consejos">Consejos</h3> <ul> <li><strong>Importante</strong> En caso de que el sistema este demasiado lento o no se despliegue algún servicio, debes informar inmediatamente al proctor para que reinicie el sistema o busque una solución los técnicos.</li> <li>Cambia el idioma del teclado a ingles.</li> <li>Si no eres bueno para hablar en ingles, pide que todo sea por escrito. El proctor no tendrá problema en comunicarse por el chat.</li> <li>Trata de no demorar mucho en algunas respuestas, por ejemplo hay una pregunta sobre el FQDN que demora mucho, te recomiendo dejarla para el final.</li> <li>En el caso del scaneo con nmap es recomendable utilizar el parametro -oA para guardar los resultados. Pues el scaneo demora entre 30 min y una hora y los resultados pueden perderse al cerrar la ventana sin darnos cuenta.</li> <li>No te acostumbres a la vpn de las máquinas de Hack the Box o Try Hack Me son muy buenos recursos para estudiar pero en el examen la mayor dificultad es el tiempo y los nervios que conllevan a ello.</li> <li>Realiza tu cheatsheat de comandos para el momento del examen.</li> </ul> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/9-480.webp 480w,/assets/img/9-800.webp 800w,/assets/img/9-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h1 id="las-preguntas"><strong>Las preguntas</strong></h1> <p>El examen comprende conocimientos de seguridad informática ofensiva y defensiva, las preguntas en algunos casos se resuelven en pocos pasos en otros casos es necesario realizar algunos pasos extra. Este examen requiere el uso de herramientas como veracrypt, wireshark en el caso de las preguntas de seguridad defensiva, en el caso de seguridad ofensiva es necesario nmap, sqlmap entre otras.</p> <p>En este sentido utilice los siguientes recursos:</p> <p>En el caso de revisión de puertos y FQDN utilice los siguientes recursos</p> <div class="container mt-3"> <ul class="list-unstyled d-flex flex-wrap justify-content-center"> <li class="col-12 col-sm-6 col-md-4 mt-3"> <a href="https://github.com/cmuppin/CEH/blob/main/Scanning%20Nmap" target="_blank" class="text-decoration-none"> <div class="card"> <img src="https://github.githubassets.com/assets/GitHub-Mark-ea2971cee799.png" class="card-img-top img-fluid rounded" alt="Thumbnail of Blog Post 1"/> <div class="card-body"> <h5 class="card-title">Scaneo de puertos con nmap</h5> <p class="card-text">Listado de comandos nmap para la certificación CEH</p> </div> </div> </a> </li> <li class="col-12 col-sm-6 col-md-4 mt-3"> <a href="https://www.youtube.com/watch?v=q63gkMG9mgI" target="_blank" class="text-decoration-none"> <div class="card"> <img src="https://yt3.googleusercontent.com/ytc/AIdro_nmVV7bb8kpdumD2UAChvRAPHFn4i-_bOVs1oUYNIERpQ=s160-c-k-c0x00ffffff-no-rj" class="card-img-top img-fluid rounded" alt="Thumbnail of YouTube Video"/> <div class="card-body"> <h5 class="card-title"></h5> <p class="card-text">Resolución de laboratorios ilabs para el examen CEH practical</p> </div> </div> </a> </li> </ul> </div> <p>En el caso de realizar evaluaciones a smbclient utilice los siguientes recursos</p> <div class="container mt-3"> <ul class="list-unstyled d-flex flex-wrap justify-content-center"> <li class="col-12 col-sm-6 col-md-4 mt-3"> <a href="https://tkcyber.com/2022/05/23/bruteforce-samba-with-smbrute/" target="_blank" class="text-decoration-none"> <div class="card"> <img src="https://tkcyber.com/wp-content/uploads/2022/05/smbrute.jpg" class="card-img-top img-fluid rounded" alt="Thumbnail of Blog Post 1"/> <div class="card-body"> <h5 class="card-title">Fuerza bruta a smbclient</h5> <p class="card-text">Descripción breve del blog post 1...</p> </div> </div> </a> </li> <li class="col-12 col-sm-6 col-md-4 mt-3"> <a href="https://tryhackme.com/r/room/kenobi" target="_blank" class="text-decoration-none"> <div class="card"> <img src="https://tryhackme-images.s3.amazonaws.com/room-icons/46f437a95b1de43238c290a9c416c8d4.png" class="card-img-top img-fluid rounded" alt="Thumbnail of Blog Post 1"/> <div class="card-body"> <h5 class="card-title">TryHackMe - Kenobi</h5> <p class="card-text">Máquina diseñada para pruebas a smbclient</p> </div> </div> </a> </li> </ul> </div> <p>En el caso de necesitar realizar evaluaciones de fuerza bruta para hallar el login de una web utilice el siguiente recurso de TryHackMe</p> <div class="container mt-3"> <ul class="list-unstyled d-flex flex-wrap justify-content-center"> <li class="col-12 col-sm-6 col-md-4 mt-3"> <a href="https://tryhackme.com/r/room/zeno" target="_blank" class="text-decoration-none"> <div class="card"> <img src="https://tryhackme-images.s3.amazonaws.com/room-icons/6aaead7a901eb44de0d69d31d4a6b5ae.jpeg" class="card-img-top img-fluid rounded" alt="Thumbnail of Blog Post 1"/> <div class="card-body"> <h5 class="card-title">Fuerza bruta utilizando Hydra</h5> <p class="card-text">Máquina diseñada para realizar pruebas de fuerza bruta al login utilizando diferentes recursos como Burpsuite, hydra, etc</p> </div> </div> </a> </li> </ul> </div> <p>Es muy útil utilizar recursos en línea para la decodificación y desencriptación de datos en los desafios</p> <div class="container mt-3"> <ul class="list-unstyled d-flex flex-wrap justify-content-center"> <li class="col-12 col-sm-6 col-md-4 mt-3"> <a href="https://www.base64decode.org/es/" target="_blank" class="text-decoration-none"> <div class="card"> <img src="https://cdn.base64decode.org/assets/images/b64-180.webp" class="card-img-top img-fluid rounded" alt="Thumbnail of Blog Post 1"/> <div class="card-body"> <h5 class="card-title">Base 64 decode</h5> <p class="card-text">Decodificación en base 64</p> </div> </div> </a> </li> </ul> </div> <p>Para comprender el escalamiento de privilegios utilice la siguiente sala de TryHackMe, aunque la solución del ejercicio es mucho mas sencilla de lo que muestra la sala.</p> <div class="container mt-3"> <ul class="list-unstyled d-flex flex-wrap justify-content-center"> <li class="col-12 col-sm-6 col-md-4 mt-3"> <a href="https://tryhackme.com/room/linuxprivescarena" target="_blank" class="text-decoration-none"> <div class="card"> <img src="https://tryhackme-images.s3.amazonaws.com/room-icons/43afc4ae36b5432c737ff13fdaf911a5.png" class="card-img-top img-fluid rounded" alt="Thumbnail of Blog Post 1"/> <div class="card-body"> <h5 class="card-title">linuxprivescarena - THM</h5> <p class="card-text">Sala para realizar escalamiento de privilegios en Linux</p> </div> </div> </a> </li> </ul> </div> <p>En el caso explotar inyección sql, especificamente sqlmap, utilice la siguiente saala de THM</p> <div class="container mt-3"> <ul class="list-unstyled d-flex flex-wrap justify-content-center"> <li class="col-12 col-sm-6 col-md-4 mt-3"> <a href="https://tryhackme.com/r/room/sqhell" target="_blank" class="text-decoration-none"> <div class="card"> <img src="https://tryhackme-images.s3.amazonaws.com/room-icons/32586486f8adc4ce95c49f91ab6ef0fd.jpeg" class="card-img-top img-fluid rounded" alt="Thumbnail of Blog Post 1"/> <div class="card-body"> <h5 class="card-title">sqlhell - TryHackMe</h5> <p class="card-text">Máquina diseñada para realizar pruebas de inyección sql</p> </div> </div> </a> </li> </ul> </div> <p>En torno a seguridad defensiva, como ser ataques ddos utilice el siguiente video para comprender el tema</p> <div class="container mt-3"> <ul class="list-unstyled d-flex flex-wrap justify-content-center"> <li class="col-12 col-sm-6 col-md-4 mt-3"> <a href="https://www.youtube.com/watch?v=m2LoHpqrN4o" target="_blank" class="text-decoration-none"> <div class="card"> <img src="https://yt3.googleusercontent.com/eiDEmNRJlPXyAazD_GyJRJLsmSqWMmBN-BJDfc-ouxtifKuQDRQpI2-DYA-y2_oXzuTleaGnJQ=s160-c-k-c0x00ffffff-no-rj" class="card-img-top img-fluid rounded" alt="Thumbnail of YouTube Video"/> <div class="card-body"> <h5 class="card-title">Análisis de ataque DDoS</h5> <p class="card-text">Exploración de como detectar un ataque Dos y DDoS</p> </div> </div> </a> </li> </ul> </div> <p>Por último la certificación es la siguiente</p> <div class="row mt-3 justify-content-center"> <div class="col-8 col-sm-6 col-md-4 mt-3 mt-md-0"> <div class="img-container"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/cert-480.webp 480w,/assets/img/cert-800.webp 800w,/assets/img/cert-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/cert.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> </div> <div class="caption"> Certificacion CEH. </div>]]></content><author><name></name></author><category term="Seguridad"/><category term="Informática"/><category term="certification,"/><category term="CEH,"/><category term="pentesting"/><summary type="html"><![CDATA[Un breve resumen de las preguntas y que contenidos utilice para estudiar]]></summary></entry><entry><title type="html">Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra</title><link href="https://sefamol.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/" rel="alternate" type="text/html" title="Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra"/><published>2024-05-14T00:00:00+00:00</published><updated>2024-05-14T00:00:00+00:00</updated><id>https://sefamol.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra</id><content type="html" xml:base="https://sefamol.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[We’re sharing updates across our Gemini family of models and a glimpse of Project Astra, our vision for the future of AI assistants.]]></summary></entry><entry><title type="html">a post with tabs</title><link href="https://sefamol.github.io/blog/2024/tabs/" rel="alternate" type="text/html" title="a post with tabs"/><published>2024-05-01T00:32:13+00:00</published><updated>2024-05-01T00:32:13+00:00</updated><id>https://sefamol.github.io/blog/2024/tabs</id><content type="html" xml:base="https://sefamol.github.io/blog/2024/tabs/"><![CDATA[<p>This is how a post with <a href="https://github.com/Ovski4/jekyll-tabs">tabs</a> looks like. Note that the tabs could be used for different purposes, not only for code.</p> <h2 id="first-tabs">First tabs</h2> <p>To add tabs, use the following syntax:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">tabs</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-1</span><span class="w"> </span><span class="cp">%}</span>

Content 1

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-2</span><span class="w"> </span><span class="cp">%}</span>

Content 2

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtabs</span><span class="w"> </span><span class="cp">%}</span>
</code></pre></div></div> <p>With this you can generate visualizations like:</p> <ul id="log" class="tab" data-tab="aaa2bec1-c1f6-4092-bc10-f7ebdb4e7f35" data-name="log"> <li class="active" id="log-php"> <a href="#">php </a> </li> <li id="log-js"> <a href="#">js </a> </li> <li id="log-ruby"> <a href="#">ruby </a> </li> </ul> <ul class="tab-content" id="aaa2bec1-c1f6-4092-bc10-f7ebdb4e7f35" data-name="log"> <li class="active"> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">var_dump</span><span class="p">(</span><span class="s1">'hello'</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">pputs</span> <span class="dl">'</span><span class="s1">hello</span><span class="dl">'</span>
</code></pre></div></div> </li> </ul> <h2 id="another-example">Another example</h2> <ul id="data-struct" class="tab" data-tab="d41f671a-7229-4045-bc50-8b7ddd3f7ed8" data-name="data-struct"> <li class="active" id="data-struct-yaml"> <a href="#">yaml </a> </li> <li id="data-struct-json"> <a href="#">json </a> </li> </ul> <ul class="tab-content" id="d41f671a-7229-4045-bc50-8b7ddd3f7ed8" data-name="data-struct"> <li class="active"> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">hello</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">whatsup"</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">hi"</span>
</code></pre></div></div> </li> <li> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"hello"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"whatsup"</span><span class="p">,</span><span class="w"> </span><span class="s2">"hi"</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> </li> </ul> <h2 id="tabs-for-something-else">Tabs for something else</h2> <ul id="something-else" class="tab" data-tab="c59bd3c1-9ca1-406f-876c-fc7105c08f1c" data-name="something-else"> <li class="active" id="something-else-text"> <a href="#">text </a> </li> <li id="something-else-quote"> <a href="#">quote </a> </li> <li id="something-else-list"> <a href="#">list </a> </li> </ul> <ul class="tab-content" id="c59bd3c1-9ca1-406f-876c-fc7105c08f1c" data-name="something-else"> <li class="active"> <p>Regular text</p> </li> <li> <blockquote> <p>A quote</p> </blockquote> </li> <li> <p>Hipster list</p> <ul> <li>brunch</li> <li>fixie</li> <li>raybans</li> <li>messenger bag</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included tabs in a post could look like]]></summary></entry><entry><title type="html">a post with typograms</title><link href="https://sefamol.github.io/blog/2024/typograms/" rel="alternate" type="text/html" title="a post with typograms"/><published>2024-04-29T23:36:10+00:00</published><updated>2024-04-29T23:36:10+00:00</updated><id>https://sefamol.github.io/blog/2024/typograms</id><content type="html" xml:base="https://sefamol.github.io/blog/2024/typograms/"><![CDATA[<p>This is an example post with some <a href="https://github.com/google/typograms/">typograms</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">+----+
|    |---&gt; My first diagram!
+----+</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-typograms">+----+
|    |---&gt; My first diagram!
+----+
</code></pre> <p>Another example:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.</span>
<span class="p">```</span>
</code></pre></div></div> <p>which generates:</p> <pre><code class="language-typograms">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.
</code></pre> <p>For more examples, check out the <a href="https://google.github.io/typograms/#examples">typograms documentation</a>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[this is what included typograms code could look like]]></summary></entry><entry><title type="html">a post that can be cited</title><link href="https://sefamol.github.io/blog/2024/post-citation/" rel="alternate" type="text/html" title="a post that can be cited"/><published>2024-04-28T15:06:00+00:00</published><updated>2024-04-28T15:06:00+00:00</updated><id>https://sefamol.github.io/blog/2024/post-citation</id><content type="html" xml:base="https://sefamol.github.io/blog/2024/post-citation/"><![CDATA[<p>This is an example post that can be cited. The content of the post ends here, while the citation information is automatically provided below. The only thing needed is for you to set the <code class="language-plaintext highlighter-rouge">citation</code> key in the front matter to <code class="language-plaintext highlighter-rouge">true</code>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="citation"/><summary type="html"><![CDATA[this is what a post that can be cited looks like]]></summary></entry><entry><title type="html">a post with pseudo code</title><link href="https://sefamol.github.io/blog/2024/pseudocode/" rel="alternate" type="text/html" title="a post with pseudo code"/><published>2024-04-15T00:01:00+00:00</published><updated>2024-04-15T00:01:00+00:00</updated><id>https://sefamol.github.io/blog/2024/pseudocode</id><content type="html" xml:base="https://sefamol.github.io/blog/2024/pseudocode/"><![CDATA[<p>This is an example post with some pseudo code rendered by <a href="https://github.com/SaswatPadhi/pseudocode.js">pseudocode</a>. The example presented here is the same as the one in the <a href="https://saswat.padhi.me/pseudocode.js/">pseudocode.js</a> documentation, with only one simple but important change: everytime you would use <code class="language-plaintext highlighter-rouge">$</code>, you should use <code class="language-plaintext highlighter-rouge">$$</code> instead. Also, note that the <code class="language-plaintext highlighter-rouge">pseudocode</code> key in the front matter is set to <code class="language-plaintext highlighter-rouge">true</code> to enable the rendering of pseudo code. As an example, using this code:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">pseudocode
</span><span class="sb">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Generates:</p> <pre><code class="language-pseudocode">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included pseudo code could look like]]></summary></entry><entry><title type="html">a post with code diff</title><link href="https://sefamol.github.io/blog/2024/code-diff/" rel="alternate" type="text/html" title="a post with code diff"/><published>2024-01-27T19:22:00+00:00</published><updated>2024-01-27T19:22:00+00:00</updated><id>https://sefamol.github.io/blog/2024/code-diff</id><content type="html" xml:base="https://sefamol.github.io/blog/2024/code-diff/"><![CDATA[<p>You can display diff code by using the regular markdown syntax:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff
</span><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")
</span></code></pre></div></div> <p>But this is difficult to read, specially if you have a large diff. You can use <a href="https://diff2html.xyz/">diff2html</a> to display a more readable version of the diff. For this, just use <code class="language-plaintext highlighter-rouge">diff2html</code> instead of <code class="language-plaintext highlighter-rouge">diff</code> for the code block language:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff2html
</span><span class="sb">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
--- a/sample.js
+++ b/sample.js
@@ -1 +1 @@
-console.log("Hello World!")
+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>If we use a longer example, for example <a href="https://github.com/rtfpessoa/diff2html/commit/c2c253d3e3f8b8b267f551e659f72b44ca2ac927">this commit from diff2html</a>, it will generate the following output:</p> <pre><code class="language-diff2html">From 2aaae31cc2a37bfff83430c2c914b140bee59b6a Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sun, 9 Oct 2016 16:41:54 +0100
Subject: [PATCH 1/2] Initial template override support

---
 scripts/hulk.js                    |  4 ++--
 src/diff2html.js                   |  3 +--
 src/file-list-printer.js           | 11 ++++++++---
 src/hoganjs-utils.js               | 29 +++++++++++++++++------------
 src/html-printer.js                |  6 ++++++
 src/line-by-line-printer.js        |  6 +++++-
 src/side-by-side-printer.js        |  6 +++++-
 test/file-list-printer-tests.js    |  2 +-
 test/hogan-cache-tests.js          | 18 +++++++++++++++---
 test/line-by-line-tests.js         |  3 +--
 test/side-by-side-printer-tests.js |  3 +--
 11 files changed, 62 insertions(+), 29 deletions(-)

diff --git a/scripts/hulk.js b/scripts/hulk.js
index 5a793c18..a4b1a4d5 100755
--- a/scripts/hulk.js
+++ b/scripts/hulk.js
@@ -173,11 +173,11 @@ function namespace(name) {
 // write a template foreach file that matches template extension
 templates = extractFiles(options.argv.remain)
   .map(function(file) {
-    var openedFile = fs.readFileSync(file, 'utf-8');
+    var openedFile = fs.readFileSync(file, 'utf-8').trim();
     var name;
     if (!openedFile) return;
     name = namespace(path.basename(file).replace(/\..*$/, ''));
-    openedFile = removeByteOrderMark(openedFile.trim());
+    openedFile = removeByteOrderMark(openedFile);
     openedFile = wrap(file, name, openedFile);
     if (!options.outputdir) return openedFile;
     fs.writeFileSync(path.join(options.outputdir, name + '.js')
diff --git a/src/diff2html.js b/src/diff2html.js
index 21b0119e..64e138f5 100644
--- a/src/diff2html.js
+++ b/src/diff2html.js
@@ -7,7 +7,6 @@

 (function() {
   var diffParser = require('./diff-parser.js').DiffParser;
-  var fileLister = require('./file-list-printer.js').FileListPrinter;
   var htmlPrinter = require('./html-printer.js').HtmlPrinter;

   function Diff2Html() {
@@ -43,7 +42,7 @@

     var fileList = '';
     if (configOrEmpty.showFiles === true) {
-      fileList = fileLister.generateFileList(diffJson, configOrEmpty);
+      fileList = htmlPrinter.generateFileListSummary(diffJson, configOrEmpty);
     }

     var diffOutput = '';
diff --git a/src/file-list-printer.js b/src/file-list-printer.js
index e408d9b2..1e0a2c61 100644
--- a/src/file-list-printer.js
+++ b/src/file-list-printer.js
@@ -8,11 +8,16 @@
 (function() {
   var printerUtils = require('./printer-utils.js').PrinterUtils;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var baseTemplatesPath = 'file-summary';
   var iconsBaseTemplatesPath = 'icon';

-  function FileListPrinter() {
+  function FileListPrinter(config) {
+    this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   FileListPrinter.prototype.generateFileList = function(diffFiles) {
@@ -38,5 +43,5 @@
     });
   };

-  module.exports.FileListPrinter = new FileListPrinter();
+  module.exports.FileListPrinter = FileListPrinter;
 })();
diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 9949e5fa..0dda08d7 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -8,18 +8,19 @@
 (function() {
   var fs = require('fs');
   var path = require('path');
-
   var hogan = require('hogan.js');

   var hoganTemplates = require('./templates/diff2html-templates.js');

-  var templatesPath = path.resolve(__dirname, 'templates');
+  var extraTemplates;

-  function HoganJsUtils() {
+  function HoganJsUtils(configuration) {
+    this.config = configuration || {};
+    extraTemplates = this.config.templates || {};
   }

-  HoganJsUtils.prototype.render = function(namespace, view, params, configuration) {
-    var template = this.template(namespace, view, configuration);
+  HoganJsUtils.prototype.render = function(namespace, view, params) {
+    var template = this.template(namespace, view);
     if (template) {
       return template.render(params);
     }
@@ -27,17 +28,16 @@
     return null;
   };

-  HoganJsUtils.prototype.template = function(namespace, view, configuration) {
-    var config = configuration || {};
+  HoganJsUtils.prototype.template = function(namespace, view) {
     var templateKey = this._templateKey(namespace, view);

-    return this._getTemplate(templateKey, config);
+    return this._getTemplate(templateKey);
   };

-  HoganJsUtils.prototype._getTemplate = function(templateKey, config) {
+  HoganJsUtils.prototype._getTemplate = function(templateKey) {
     var template;

-    if (!config.noCache) {
+    if (!this.config.noCache) {
       template = this._readFromCache(templateKey);
     }

@@ -53,6 +53,7 @@

     try {
       if (fs.readFileSync) {
+        var templatesPath = path.resolve(__dirname, 'templates');
         var templatePath = path.join(templatesPath, templateKey);
         var templateContent = fs.readFileSync(templatePath + '.mustache', 'utf8');
         template = hogan.compile(templateContent);
@@ -66,12 +67,16 @@
   };

   HoganJsUtils.prototype._readFromCache = function(templateKey) {
-    return hoganTemplates[templateKey];
+    return extraTemplates[templateKey] || hoganTemplates[templateKey];
   };

   HoganJsUtils.prototype._templateKey = function(namespace, view) {
     return namespace + '-' + view;
   };

-  module.exports.HoganJsUtils = new HoganJsUtils();
+  HoganJsUtils.prototype.compile = function(templateStr) {
+    return hogan.compile(templateStr);
+  };
+
+  module.exports.HoganJsUtils = HoganJsUtils;
 })();
diff --git a/src/html-printer.js b/src/html-printer.js
index 585d5b66..13f83047 100644
--- a/src/html-printer.js
+++ b/src/html-printer.js
@@ -8,6 +8,7 @@
 (function() {
   var LineByLinePrinter = require('./line-by-line-printer.js').LineByLinePrinter;
   var SideBySidePrinter = require('./side-by-side-printer.js').SideBySidePrinter;
+  var FileListPrinter = require('./file-list-printer.js').FileListPrinter;

   function HtmlPrinter() {
   }
@@ -22,5 +23,10 @@
     return sideBySidePrinter.generateSideBySideJsonHtml(diffFiles);
   };

+  HtmlPrinter.prototype.generateFileListSummary = function(diffJson, config) {
+    var fileListPrinter = new FileListPrinter(config);
+    return fileListPrinter.generateFileList(diffJson);
+  };
+
   module.exports.HtmlPrinter = new HtmlPrinter();
 })();
diff --git a/src/line-by-line-printer.js b/src/line-by-line-printer.js
index b07eb53c..d230bedd 100644
--- a/src/line-by-line-printer.js
+++ b/src/line-by-line-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'line-by-line';
   var iconsBaseTemplatesPath = 'icon';
@@ -19,6 +20,9 @@

   function LineByLinePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   LineByLinePrinter.prototype.makeFileDiffHtml = function(file, diffs) {
diff --git a/src/side-by-side-printer.js b/src/side-by-side-printer.js
index bbf1dc8d..5e3033b3 100644
--- a/src/side-by-side-printer.js
+++ b/src/side-by-side-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'side-by-side';
   var iconsBaseTemplatesPath = 'icon';
@@ -26,6 +27,9 @@

   function SideBySidePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   SideBySidePrinter.prototype.makeDiffHtml = function(file, diffs) {
diff --git a/test/file-list-printer-tests.js b/test/file-list-printer-tests.js
index a502a46f..60ea3208 100644
--- a/test/file-list-printer-tests.js
+++ b/test/file-list-printer-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var fileListPrinter = require('../src/file-list-printer.js').FileListPrinter;
+var fileListPrinter = new (require('../src/file-list-printer.js').FileListPrinter)();

 describe('FileListPrinter', function() {
   describe('generateFileList', function() {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 190bf6f8..3bb754ac 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var HoganJsUtils = require('../src/hoganjs-utils.js').HoganJsUtils;
+var HoganJsUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)();
 var diffParser = require('../src/diff-parser.js').DiffParser;

 describe('HoganJsUtils', function() {
@@ -21,16 +21,28 @@ describe('HoganJsUtils', function() {
       });
       assert.equal(emptyDiffHtml, result);
     });
+
     it('should render view without cache', function() {
       var result = HoganJsUtils.render('generic', 'empty-diff', {
         contentClass: 'd2h-code-line',
         diffParser: diffParser
       }, {noCache: true});
-      assert.equal(emptyDiffHtml + '\n', result);
+      assert.equal(emptyDiffHtml, result);
     });
+
     it('should return null if template is missing', function() {
-      var result = HoganJsUtils.render('generic', 'missing-template', {}, {noCache: true});
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)({noCache: true});
+      var result = hoganUtils.render('generic', 'missing-template', {});
       assert.equal(null, result);
     });
+
+    it('should allow templates to be overridden', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+
+      var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
diff --git a/test/line-by-line-tests.js b/test/line-by-line-tests.js
index 1cd92073..8869b3df 100644
--- a/test/line-by-line-tests.js
+++ b/test/line-by-line-tests.js
@@ -14,7 +14,7 @@ describe('LineByLinePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expected, fileHtml);
     });
@@ -422,7 +422,6 @@ describe('LineByLinePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                &lt;/tbody&gt;\n' +
         '            &lt;/table&gt;\n' +
         '        &lt;/div&gt;\n' +
diff --git a/test/side-by-side-printer-tests.js b/test/side-by-side-printer-tests.js
index 76625f8e..771daaa5 100644
--- a/test/side-by-side-printer-tests.js
+++ b/test/side-by-side-printer-tests.js
@@ -14,7 +14,7 @@ describe('SideBySidePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expectedRight, fileHtml.right);
       assert.equal(expectedLeft, fileHtml.left);
@@ -324,7 +324,6 @@ describe('SideBySidePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                    &lt;/tbody&gt;\n' +
         '                &lt;/table&gt;\n' +
         '            &lt;/div&gt;\n' +

From f3cadb96677d0eb82fc2752dc3ffbf35ca9b5bdb Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sat, 15 Oct 2016 13:21:22 +0100
Subject: [PATCH 2/2] Allow uncompiled templates

---
 README.md                 |  3 +++
 src/hoganjs-utils.js      |  7 +++++++
 test/hogan-cache-tests.js | 24 +++++++++++++++++++++++-
 3 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 132c8a28..46909f25 100644
--- a/README.md
+++ b/README.md
@@ -98,6 +98,9 @@ The HTML output accepts a Javascript object with configuration. Possible options
   - `synchronisedScroll`: scroll both panes in side-by-side mode: `true` or `false`, default is `false`
   - `matchWordsThreshold`: similarity threshold for word matching, default is 0.25
   - `matchingMaxComparisons`: perform at most this much comparisons for line matching a block of changes, default is `2500`
+  - `templates`: object with previously compiled templates to replace parts of the html
+  - `rawTemplates`: object with raw not compiled templates to replace parts of the html
+  &gt; For more information regarding the possible templates look into [src/templates](https://github.com/rtfpessoa/diff2html/tree/master/src/templates)

 ## Diff2HtmlUI Helper

diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 0dda08d7..b2e9c275 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -17,6 +17,13 @@
   function HoganJsUtils(configuration) {
     this.config = configuration || {};
     extraTemplates = this.config.templates || {};
+
+    var rawTemplates = this.config.rawTemplates || {};
+    for (var templateName in rawTemplates) {
+      if (rawTemplates.hasOwnProperty(templateName)) {
+        if (!extraTemplates[templateName]) extraTemplates[templateName] = this.compile(rawTemplates[templateName]);
+      }
+    }
   }

   HoganJsUtils.prototype.render = function(namespace, view, params) {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 3bb754ac..a34839c0 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -36,7 +36,7 @@ describe('HoganJsUtils', function() {
       assert.equal(null, result);
     });

-    it('should allow templates to be overridden', function() {
+    it('should allow templates to be overridden with compiled templates', function() {
       var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');

       var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
@@ -44,5 +44,27 @@ describe('HoganJsUtils', function() {
       var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
       assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
     });
+
+    it('should allow templates to be overridden with uncompiled templates', function() {
+      var emptyDiffTemplate = '&lt;p&gt;&lt;/p&gt;';
+
+      var config = {rawTemplates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
+
+    it('should allow templates to be overridden giving priority to compiled templates', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+      var emptyDiffTemplateUncompiled = '&lt;p&gt;Not used!&lt;/p&gt;';
+
+      var config = {
+        templates: {'generic-empty-diff': emptyDiffTemplate},
+        rawTemplates: {'generic-empty-diff': emptyDiffTemplateUncompiled}
+      };
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is how you can display code diffs]]></summary></entry><entry><title type="html">a post with advanced image components</title><link href="https://sefamol.github.io/blog/2024/advanced-images/" rel="alternate" type="text/html" title="a post with advanced image components"/><published>2024-01-27T11:46:00+00:00</published><updated>2024-01-27T11:46:00+00:00</updated><id>https://sefamol.github.io/blog/2024/advanced-images</id><content type="html" xml:base="https://sefamol.github.io/blog/2024/advanced-images/"><![CDATA[<p>This is an example post with advanced image components.</p> <h2 id="image-slider">Image Slider</h2> <p>This is a simple image slider. It uses the <a href="https://swiperjs.com/">Swiper</a> library. Check the <a href="https://swiperjs.com/demos">examples page</a> for more information of what you can achieve with it.</p> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/9-480.webp 480w,/assets/img/9-800.webp 800w,/assets/img/9-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/7-480.webp 480w,/assets/img/7-800.webp 800w,/assets/img/7-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/8-480.webp 480w,/assets/img/8-800.webp 800w,/assets/img/8-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/10-480.webp 480w,/assets/img/10-800.webp 800w,/assets/img/10-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/12-480.webp 480w,/assets/img/12-800.webp 800w,/assets/img/12-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> </swiper-container> <h2 id="image-comparison-slider">Image Comparison Slider</h2> <p>This is a simple image comparison slider. It uses the <a href="https://img-comparison-slider.sneas.io/">img-comparison-slider</a> library. Check the <a href="https://img-comparison-slider.sneas.io/examples.html">examples page</a> for more information of what you can achieve with it.</p> <img-comparison-slider> <figure slot="first"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/prof_pic-480.webp 480w,/assets/img/prof_pic-800.webp 800w,/assets/img/prof_pic-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/prof_pic.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure slot="second"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/prof_pic_color-480.webp 480w,/assets/img/prof_pic_color-800.webp 800w,/assets/img/prof_pic_color-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/prof_pic_color.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </img-comparison-slider>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is what advanced image components could look like]]></summary></entry><entry><title type="html">a post with vega lite</title><link href="https://sefamol.github.io/blog/2024/vega-lite/" rel="alternate" type="text/html" title="a post with vega lite"/><published>2024-01-27T00:20:00+00:00</published><updated>2024-01-27T00:20:00+00:00</updated><id>https://sefamol.github.io/blog/2024/vega-lite</id><content type="html" xml:base="https://sefamol.github.io/blog/2024/vega-lite/"><![CDATA[<p>This is an example post with some <a href="https://vega.github.io/vega-lite/">vega lite</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">vega_lite
</span><span class="sb">{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",
  "data": {
    "url": "https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json"
  },
  "transform": [
    {"filter": "datum['IMDB Rating'] != null"},
    {"filter": {"timeUnit": "year", "field": "Release Date", "range": [null, 2019]}},
    {
      "joinaggregate": [{
        "op": "mean",
        "field": "IMDB Rating",
        "as": "AverageRating"
      }]
    },
    {
      "calculate": "datum['IMDB Rating'] - datum.AverageRating",
      "as": "RatingDelta"
    }
  ],
  "mark": "point",
  "encoding": {
    "x": {
      "field": "Release Date",
      "type": "temporal"
    },
    "y": {
      "field": "RatingDelta",
      "type": "quantitative",
      "title": "Rating Delta"
    },
    "color": {
      "field": "RatingDelta",
      "type": "quantitative",
      "scale": {"domainMid": 0},
      "title": "Rating Delta"
    }
  }
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-vega_lite">{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",
  "data": {
    "url": "https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json"
  },
  "transform": [
    {"filter": "datum['IMDB Rating'] != null"},
    {"filter": {"timeUnit": "year", "field": "Release Date", "range": [null, 2019]}},
    {
      "joinaggregate": [{
        "op": "mean",
        "field": "IMDB Rating",
        "as": "AverageRating"
      }]
    },
    {
      "calculate": "datum['IMDB Rating'] - datum.AverageRating",
      "as": "RatingDelta"
    }
  ],
  "mark": "point",
  "encoding": {
    "x": {
      "field": "Release Date",
      "type": "temporal"
    },
    "y": {
      "field": "RatingDelta",
      "type": "quantitative",
      "title": "Rating Delta"
    },
    "color": {
      "field": "RatingDelta",
      "type": "quantitative",
      "scale": {"domainMid": 0},
      "title": "Rating Delta"
    }
  }
}
</code></pre> <p>This plot supports both light and dark themes.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included vega lite code could look like]]></summary></entry></feed>